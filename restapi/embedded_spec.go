// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "API Avito shop",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/api/auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Аутентификация и получение JWT-токена.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная аутентификация.",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/buy/{item}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Купить предмет за монеты.",
        "parameters": [
          {
            "type": "string",
            "name": "item",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ."
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/info": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Получить информацию о монетах, инвентаре и истории транзакций.",
        "responses": {
          "200": {
            "description": "Успешный ответ.",
            "schema": {
              "$ref": "#/definitions/InfoResponse"
            }
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/sendCoin": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Отправить монеты другому пользователю.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendCoinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ."
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль для аутентификации.",
          "type": "string",
          "format": "password"
        },
        "username": {
          "description": "Имя пользователя для аутентификации.",
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "JWT-токен для доступа к защищенным ресурсам.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "Сообщение об ошибке, описывающее проблему.",
          "type": "string"
        }
      }
    },
    "InfoResponse": {
      "type": "object",
      "properties": {
        "coinHistory": {
          "type": "object",
          "properties": {
            "received": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "Количество полученных монет.",
                    "type": "integer"
                  },
                  "fromUser": {
                    "description": "Имя пользователя, который отправил монеты.",
                    "type": "string"
                  }
                }
              }
            },
            "sent": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "Количество отправленных монет.",
                    "type": "integer"
                  },
                  "toUser": {
                    "description": "Имя пользователя, которому отправлены монеты.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "coins": {
          "description": "Количество доступных монет.",
          "type": "integer"
        },
        "inventory": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "quantity": {
                "description": "Количество предметов.",
                "type": "integer"
              },
              "type": {
                "description": "Тип предмета.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "SendCoinRequest": {
      "type": "object",
      "required": [
        "toUser",
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Количество монет, которые необходимо отправить.",
          "type": "integer"
        },
        "toUser": {
          "description": "Имя пользователя, которому нужно отправить монеты.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "x-components": {}
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "API Avito shop",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/api/auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Аутентификация и получение JWT-токена.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная аутентификация.",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/buy/{item}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Купить предмет за монеты.",
        "parameters": [
          {
            "type": "string",
            "name": "item",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ."
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/info": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Получить информацию о монетах, инвентаре и истории транзакций.",
        "responses": {
          "200": {
            "description": "Успешный ответ.",
            "schema": {
              "$ref": "#/definitions/InfoResponse"
            }
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/sendCoin": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Отправить монеты другому пользователю.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendCoinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ."
          },
          "400": {
            "description": "Неверный запрос.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Неавторизован.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль для аутентификации.",
          "type": "string",
          "format": "password"
        },
        "username": {
          "description": "Имя пользователя для аутентификации.",
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "JWT-токен для доступа к защищенным ресурсам.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "Сообщение об ошибке, описывающее проблему.",
          "type": "string"
        }
      }
    },
    "InfoResponse": {
      "type": "object",
      "properties": {
        "coinHistory": {
          "type": "object",
          "properties": {
            "received": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InfoResponseCoinHistoryReceivedItems0"
              }
            },
            "sent": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InfoResponseCoinHistorySentItems0"
              }
            }
          }
        },
        "coins": {
          "description": "Количество доступных монет.",
          "type": "integer"
        },
        "inventory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfoResponseInventoryItems0"
          }
        }
      }
    },
    "InfoResponseCoinHistory": {
      "type": "object",
      "properties": {
        "received": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfoResponseCoinHistoryReceivedItems0"
          }
        },
        "sent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfoResponseCoinHistorySentItems0"
          }
        }
      }
    },
    "InfoResponseCoinHistoryReceivedItems0": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "Количество полученных монет.",
          "type": "integer"
        },
        "fromUser": {
          "description": "Имя пользователя, который отправил монеты.",
          "type": "string"
        }
      }
    },
    "InfoResponseCoinHistorySentItems0": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "Количество отправленных монет.",
          "type": "integer"
        },
        "toUser": {
          "description": "Имя пользователя, которому отправлены монеты.",
          "type": "string"
        }
      }
    },
    "InfoResponseInventoryItems0": {
      "type": "object",
      "properties": {
        "quantity": {
          "description": "Количество предметов.",
          "type": "integer"
        },
        "type": {
          "description": "Тип предмета.",
          "type": "string"
        }
      }
    },
    "SendCoinRequest": {
      "type": "object",
      "required": [
        "toUser",
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Количество монет, которые необходимо отправить.",
          "type": "integer"
        },
        "toUser": {
          "description": "Имя пользователя, которому нужно отправить монеты.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "x-components": {}
}`))
}
