// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vsrtferrum/AvitoIntro/models"
)

// PostAPISendCoinOKCode is the HTTP code returned for type PostAPISendCoinOK
const PostAPISendCoinOKCode int = 200

/*
PostAPISendCoinOK Успешный ответ.

swagger:response postApiSendCoinOK
*/
type PostAPISendCoinOK struct {
}

// NewPostAPISendCoinOK creates PostAPISendCoinOK with default headers values
func NewPostAPISendCoinOK() *PostAPISendCoinOK {

	return &PostAPISendCoinOK{}
}

// WriteResponse to the client
func (o *PostAPISendCoinOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostAPISendCoinBadRequestCode is the HTTP code returned for type PostAPISendCoinBadRequest
const PostAPISendCoinBadRequestCode int = 400

/*
PostAPISendCoinBadRequest Неверный запрос.

swagger:response postApiSendCoinBadRequest
*/
type PostAPISendCoinBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostAPISendCoinBadRequest creates PostAPISendCoinBadRequest with default headers values
func NewPostAPISendCoinBadRequest() *PostAPISendCoinBadRequest {

	return &PostAPISendCoinBadRequest{}
}

// WithPayload adds the payload to the post Api send coin bad request response
func (o *PostAPISendCoinBadRequest) WithPayload(payload *models.ErrorResponse) *PostAPISendCoinBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api send coin bad request response
func (o *PostAPISendCoinBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPISendCoinBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPISendCoinUnauthorizedCode is the HTTP code returned for type PostAPISendCoinUnauthorized
const PostAPISendCoinUnauthorizedCode int = 401

/*
PostAPISendCoinUnauthorized Неавторизован.

swagger:response postApiSendCoinUnauthorized
*/
type PostAPISendCoinUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostAPISendCoinUnauthorized creates PostAPISendCoinUnauthorized with default headers values
func NewPostAPISendCoinUnauthorized() *PostAPISendCoinUnauthorized {

	return &PostAPISendCoinUnauthorized{}
}

// WithPayload adds the payload to the post Api send coin unauthorized response
func (o *PostAPISendCoinUnauthorized) WithPayload(payload *models.ErrorResponse) *PostAPISendCoinUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api send coin unauthorized response
func (o *PostAPISendCoinUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPISendCoinUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPISendCoinInternalServerErrorCode is the HTTP code returned for type PostAPISendCoinInternalServerError
const PostAPISendCoinInternalServerErrorCode int = 500

/*
PostAPISendCoinInternalServerError Внутренняя ошибка сервера.

swagger:response postApiSendCoinInternalServerError
*/
type PostAPISendCoinInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostAPISendCoinInternalServerError creates PostAPISendCoinInternalServerError with default headers values
func NewPostAPISendCoinInternalServerError() *PostAPISendCoinInternalServerError {

	return &PostAPISendCoinInternalServerError{}
}

// WithPayload adds the payload to the post Api send coin internal server error response
func (o *PostAPISendCoinInternalServerError) WithPayload(payload *models.ErrorResponse) *PostAPISendCoinInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api send coin internal server error response
func (o *PostAPISendCoinInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPISendCoinInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
